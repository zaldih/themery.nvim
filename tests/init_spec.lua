local themery = require("themery")
local mock = require("luassert.mock")
local stub = require("luassert.stub")

describe("Themery module", function()
  before_each(function()
    -- Mocking necessary Neovim API calls and other module dependencies
    mock(vim.api, true)
    stub(themery, "setup")
    stub(themery, "closeAndRevert")
    stub(themery, "closeAndSave")
    stub(themery, "updateView")
  end)

  after_each(function()
    mock.revert(vim.api)
    themery.setup:revert()
    themery.closeAndRevert:revert()
    themery.closeAndSave:revert()
    themery.updateView:revert()
  end)

  describe("setup function", function()
    it("should configure themery with default settings", function()
      themery.setup()
      assert.stub(themery.setup).was_called_with()
    end)
  end)

  describe("closeAndRevert function", function()
    it("should revert to the previous theme", function()
      themery.closeAndRevert()
      assert.stub(themery.closeAndRevert).was_called()
    end)
  end)

  describe("closeAndSave function", function()
    it("should save the current theme and close the themery window", function()
      themery.closeAndSave()
      assert.stub(themery.closeAndSave).was_called()
    end)
  end)

  describe("updateView function", function()
    it("should update the themery window view based on user interaction", function()
      themery.updateView(1)
      assert.stub(themery.updateView).was_called_with(1)
    end)
  end)
end)
